---
// Card.astro
import type { ImageMetadata } from 'astro';

export interface Props {
  event: {
    eventName: string;
    imagePath: string | ImageMetadata;   // <- accept both
    eventInfo: string;
    isLast: boolean;
    isFirst: boolean;
  };
}

const {
  event: { eventName, imagePath, eventInfo, isLast, isFirst },
} = Astro.props;

// normalize to a string URL
const imgSrc = typeof imagePath === 'string' ? imagePath : imagePath.src;

// import decorative assets as URLs too
import twoStars from '../../assets/cards/twoStars.svg?url';
import oneStar from '../../assets/cards/oneStar.svg?url';
---

<div class="flex flex-col items-center text-center max-w-[313px] w-full">
  {isLast && (
    <img src={twoStars} alt="" class="w-[50px] h-[50px] scale-x-[-1] lg:mt-[-50px] md:mt-[-10px] md:ml-[340px] sm:ml-[340px]" />
  )}

  <div class="cardhover flex justify-center w-full h-auto sm:h-[395px] max-w-md rounded-[35px] cursor-pointer">
    <div class="cardhover-inner max-h-sm sm:w-[286px]">
      <div class="cardhover-front">
        <img class="w-full h-auto border-15 border-pink-100 rounded-2xl bg-pink-100 shadow-xl"
             src={imgSrc} alt={eventName} loading="lazy" decoding="async" />
      </div>
      <div class="cardhover-back flex items-center p-[15px]">
        <p class="text-red-500 flex">{eventInfo}</p>
      </div>
    </div>
  </div>

  {isFirst && (
    <img src={oneStar} alt="" class="w-[30px] h-[35px] scale-x-[-1] md:ml-[-400px] sm:ml-[-400px]" />
  )}

  <h3 class={`event-name font-['Raleway'] font-semibold text-2lg sm:text-2xl lg:text-2xl mt-15 ${isFirst ? 'mt-[25px]' : ''} text-red-500 whitespace-pre-line`}>
    {eventName}
  </h3>
</div>
